pipeline {
    agent any

    environment {
        IMAGE_NAME = "sarodriel/my-app"  // Nombre de la imagen Docker
        IMAGE_TAG = "latest"  // Tag de la imagen
        CONTAINER_NAME = "my-manual-app-container"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/srodriguev/Lab3-IntegrationDelivery.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh 'chmod +x scripts/test.sh'  // Da permisos de ejecución
                    sh './scripts/test.sh'  // Ejecuta el script de test
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'IMAGE_TAG=$(date +%Y%m%d%H%M%S)'
                    sh 'docker build -t sarodriel/my-app:$IMAGE_TAG .'
                    sh 'docker push sarodriel/my-app:$IMAGE_TAG'
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Detener y eliminar el contenedor si ya existe
                    sh 'docker stop $CONTAINER_NAME || true'
                    sh 'docker rm $CONTAINER_NAME || true'
                    
                    // Correr la nueva versión del contenedor
                    sh 'docker run -d --name $CONTAINER_NAME -p 3000:80 $IMAGE_NAME:$IMAGE_TAG'
                }
            }
        }
    }
}
